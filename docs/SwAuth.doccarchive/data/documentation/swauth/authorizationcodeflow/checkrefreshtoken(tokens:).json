{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkRefreshToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tokens"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwAuth\/documentation\/SwAuth\/Tokens","preciseIdentifier":"s:6SwAuth6TokensV","text":"Tokens"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Called by the instanceâ€™s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwAuth\/documentation\/SwAuth\/AuthorizationCodeFlow\/authenticatedRequest(for:numberOfRetries:)"},{"type":"text","text":" method."},{"type":"text","text":" "},{"type":"text","text":"Checks if the instance has a refresh token. If it does, and the access token is expired, calls the"},{"type":"text","text":" "},{"type":"codeVoice","code":"refreshToken"},{"type":"text","text":" method."}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swauth\/authorizationcodeflow\/checkrefreshtoken(tokens:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwAuth\/documentation\/SwAuth\/AuthorizationCodeFlow\/checkRefreshToken(tokens:)","interfaceLanguage":"swift"},"abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"Used Internally"}]},{"type":"text","text":", refresh tokens are handled internally by the library."}],"kind":"symbol","metadata":{"modules":[{"name":"SwAuth"}],"role":"symbol","title":"checkRefreshToken(tokens:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkRefreshToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tokens"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Tokens","preciseIdentifier":"s:6SwAuth6TokensV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"symbolKind":"method","externalID":"s:6SwAuth10SwauthablePAAE17checkRefreshToken6tokensyAA6TokensVz_tYaKF::SYNTHESIZED::s:6SwAuth21AuthorizationCodeFlowC","extendedModule":"SwAuth","platforms":[{"beta":false,"unavailable":false,"name":"iOS","introducedAt":"15.0","deprecated":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"12.0","deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"15.0","deprecated":false},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"8.0","deprecated":false}]},"hierarchy":{"paths":[["doc:\/\/SwAuth\/documentation\/SwAuth","doc:\/\/SwAuth\/documentation\/SwAuth\/AuthorizationCodeFlow","doc:\/\/SwAuth\/documentation\/SwAuth\/AuthorizationCodeFlow\/Swauthable-Implementations"]]},"references":{"doc://SwAuth/documentation/SwAuth/Tokens":{"role":"symbol","title":"Tokens","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Tokens"}],"abstract":[{"type":"text","text":"The tokens from a token request."}],"identifier":"doc:\/\/SwAuth\/documentation\/SwAuth\/Tokens","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Tokens"}],"url":"\/documentation\/swauth\/tokens"},"doc://SwAuth/documentation/SwAuth/HTTPRequest/Response":{"role":"symbol","title":"HTTPRequest.Response","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"abstract":[{"type":"text","text":"The response from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwAuth\/documentation\/SwAuth\/Swauthable\/authenticatedRequest(for:numberOfRetries:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwAuth\/documentation\/SwAuth\/HTTPRequest\/Response","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Response"}],"url":"\/documentation\/swauth\/httprequest\/response"},"doc://SwAuth/documentation/SwAuth/AuthorizationCodeFlow/Swauthable-Implementations":{"role":"collectionGroup","title":"Swauthable Implementations","abstract":[],"identifier":"doc:\/\/SwAuth\/documentation\/SwAuth\/AuthorizationCodeFlow\/Swauthable-Implementations","kind":"article","type":"topic","url":"\/documentation\/swauth\/authorizationcodeflow\/swauthable-implementations"},"doc://SwAuth/documentation/SwAuth/AuthorizationCodeFlow":{"role":"symbol","title":"AuthorizationCodeFlow","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthorizationCodeFlow"}],"abstract":[{"type":"text","text":"The OAuth 2.0 Authorization Code Grant according to RFC 6749\/6750."}],"identifier":"doc:\/\/SwAuth\/documentation\/SwAuth\/AuthorizationCodeFlow","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AuthorizationCodeFlow"}],"url":"\/documentation\/swauth\/authorizationcodeflow"},"doc://SwAuth/documentation/SwAuth/AuthorizationCodeFlow/authenticatedRequest(for:numberOfRetries:)":{"role":"symbol","title":"authenticatedRequest(for:numberOfRetries:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"authenticatedRequest"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:6SwAuth11HTTPRequestV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"numberOfRetries"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:6SwAuth11HTTPRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:6SwAuth11HTTPRequestV8ResponseV"}],"abstract":[{"type":"text","text":"Sends an authenticated HTTP request to a Web API endpoint. Returns a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwAuth\/documentation\/SwAuth\/HTTPRequest\/Response"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwAuth\/documentation\/SwAuth\/AuthorizationCodeFlow\/authenticatedRequest(for:numberOfRetries:)","kind":"symbol","type":"topic","url":"\/documentation\/swauth\/authorizationcodeflow\/authenticatedrequest(for:numberofretries:)"},"doc://SwAuth/documentation/SwAuth/AuthorizationCodeFlow/checkRefreshToken(tokens:)":{"role":"symbol","title":"checkRefreshToken(tokens:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkRefreshToken"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tokens"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Tokens","preciseIdentifier":"s:6SwAuth6TokensV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"Used Internally"}]},{"type":"text","text":", refresh tokens are handled internally by the library."}],"identifier":"doc:\/\/SwAuth\/documentation\/SwAuth\/AuthorizationCodeFlow\/checkRefreshToken(tokens:)","kind":"symbol","type":"topic","url":"\/documentation\/swauth\/authorizationcodeflow\/checkrefreshtoken(tokens:)"},"doc://SwAuth/documentation/SwAuth":{"role":"collection","title":"SwAuth","abstract":[{"type":"text","text":"Easily send OAuth 2.0 authorized HTTP requests with async\/await in Swift."}],"identifier":"doc:\/\/SwAuth\/documentation\/SwAuth","kind":"symbol","type":"topic","url":"\/documentation\/swauth"}}}